#!/bin/bash

echo "====== HISTORY STARTED ======"

mvn clean compile -q
if [ $? -eq 0 ]; then
    echo "‚úÖ CURRENT VERSION IS CORRECT!"
    echo "====== HISTORY COMPLETED ======"
    exit 0
fi

echo "‚ö†Ô∏è –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è. –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–∫–∞—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏..."

# –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
FIRST_COMMIT=$(git rev-list --max-parents=0 HEAD)
echo "üìå –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏: $FIRST_COMMIT"

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–º–∏—Ç–æ–≤ –æ—Ç HEAD –¥–æ –ø–µ—Ä–≤–æ–≥–æ
COMMITS=($(git rev-list HEAD))

# –ò—â–µ–º –ø–µ—Ä–≤—É—é —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é
LAST_WORKING=""
for COMMIT in "${COMMITS[@]}"; do
    echo "üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–∏—Ç $COMMIT"
    git checkout -f "$COMMIT" > /dev/null 2>&1
    mvn clean compile -q
    if [ $? -eq 0 ]; then
        echo "‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Å–±–æ—Ä–∫–∞: $COMMIT"
        LAST_WORKING=$COMMIT
        break
    fi
done

if [ -z "$LAST_WORKING" ]; then
    echo "‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ."
    exit 1
fi

# –ù–∞—Ö–æ–¥–∏–º —Å–ª–µ–¥—É—é—â–∏–π (—Å–ª–æ–º–∞–Ω–Ω—ã–π) –∫–æ–º–º–∏—Ç
REVERSED=($(git rev-list --reverse HEAD))
for ((i=0; i<${#REVERSED[@]}-1; i++)); do
    if [ "${REVERSED[$i]}" == "$LAST_WORKING" ]; then
        BAD_COMMIT=${REVERSED[$i+1]}
        break
    fi
done

if [ -z "$BAD_COMMIT" ]; then
    echo "–†–∞–±–æ—á–∞—è —Ä–µ–≤–∏–∑–∏—è –ø–æ—Å–ª–µ–¥–Ω—è—è –≤ –∏—Å—Ç–æ—Ä–∏–∏. Diff –Ω–µ –Ω—É–∂–µ–Ω."
    exit 0
fi

echo "üìù Diff –º–µ–∂–¥—É —Ä–∞–±–æ—á–µ–π $LAST_WORKING –∏ —Å–ª–æ–º–∞–Ω–Ω–æ–π $BAD_COMMIT"
mkdir -p build
git diff "$LAST_WORKING" "$BAD_COMMIT" > build/history-diff.txt
echo "‚úÖ Diff —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ build/history-diff.txt"

echo "====== HISTORY COMPLETED ======"
